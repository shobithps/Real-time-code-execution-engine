version: "3.9"

networks:
  bridge:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - bridge

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - bridge
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - bridge

  producer:
    build: ./producer
    container_name: producer
    ports:
      - "8000:8000"
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - bridge

  python-consumer:
    build: ./consumer
    container_name: python-consumer
    command: python3 python-consumer.py
    depends_on:
      kafka:
        condition: service_healthy
      producer:
        condition: service_started
    networks:
      - bridge

  java-consumer:
    build: ./consumer
    container_name: java-consumer
    command: python3 java-consumer.py
    depends_on:
      kafka:
        condition: service_healthy
      producer:
        condition: service_started
    networks:
      - bridge

  cpp-consumer:
    build: ./consumer
    container_name: cpp-consumer
    command: python3 cpp-consumer.py
    depends_on:
      kafka:
        condition: service_healthy
      producer:
        condition: service_started
    networks:
      - bridge
